#Unclear Comments: What are the contents included in the list of x? What is the meanning of nodeset? why we are using these functions on x?
####
#use lapply() to retrieve all values: matrix to be combined as dataframe
x.rows <- lapply(x.nodeset, function(z) matrix(unlist(as_list(z)), nrow=1, byrow=F))
x.df<-data.frame(do.call("rbind", x.rows))
names(x.df)<-c("year","_113_cause_name","cause_name","state","deaths","aadr") #set column names
x.df <- x.df %>%tbl_df()%>%mutate_at(4:6,as.character) %>% mutate_at(5:6,as.numeric) #change data types
x.df
if (!require("XML")){
install.packages("XML")
library("XML")
}
if (!require("RCurl")){
install.packages("RCurl")
library("RCurl")
}
if (!require("plotly")){
install.packages("plotly")
library("plotly")
}
fileURL <- "http://data.cdc.gov/api/views/bi63-dtpu/rows.xml?accessType=DOWNLOAD"
xData <- getURL(fileURL)
xml <- xmlParse(xData)
df <- xmlToDataFrame(xml["//row/row"])
#df <-df %>% mutate_at(5:6,as.character) %>% mutate_at(5:6,as.numeric)
#df
all.equal(x.df, df,convert = TRUE)
#create new variable showing the porportion for deaths of a certain cause at each year for a state.
x.df %>% group_by(year,state) %>%
mutate(causeProportion = deaths/deaths[cause_name=="All causes"])
#Percentage of deaths from cancer by state in 1999 vs 2016
cancerData <- df %>% filter ((year =="2016" | year=="1999") & (cause_name=="All causes" | cause_name =="Cancer")& state!="United States") %>%
select (state, year, cause_name, deaths) %>%
spread(cause_name, deaths)
cancerData <- cancerData %>% mutate(cancerPerc = Cancer/`All causes` )
head(cancerData)
#Percentage of deaths from suicide by state in 1999 vs 2016
suicideData <- df %>% filter ((year =="2016" | year=="1999") & (cause_name=="All causes" | cause_name =="Suicide")& state!="United States") %>%
select (state, year, cause_name, deaths) %>%
spread(cause_name, deaths)
suicideData <- suicideData %>% mutate(suicidePerc = Suicide/`All causes` )
head(suicideData)
#All cancer data
allCancerData <- df %>% filter ((cause_name=="All causes" | cause_name =="Cancer")& state!="United States") %>%
select (state, year, cause_name, deaths) %>%
spread(cause_name, deaths)
allCancerData <- allCancerData %>% mutate(cancerPerc = Cancer/`All causes` )
head(allCancerData)
#A view of both suicide and cancer trends
can_sui_data <- df %>% filter ( (cause_name=="All causes" | cause_name =="Suicide" | cause_name=="Cancer")& state!="United States") %>%
select (state, year, cause_name, deaths) %>%
spread(cause_name, deaths)
can_sui_data <- can_sui_data %>% mutate(suicidePerc = Suicide/`All causes` ) %>% mutate(cancerPerc=Cancer/`All causes`)
can_sui_data <- can_sui_data %>% group_by(year)%>% summarise(mean_sui_rate = mean(suicidePerc), mean_can_rate=mean(cancerPerc))
can_sui_data <- can_sui_data %>% gather(key=rates,values =c(mean_sui_rate,mean_can_rate))%>% group_by(year)
head(can_sui_data)
#compare mean death rate of Washington and Alabama
#df %>%
filter( state == "Alabama" | state == "Washington") %>%
group_by(year, state) %>%
summarise(mean.death = mean(deaths)) %>%
datatable() #creates searcable table
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
View(xmldf)
knitr::opts_chunk$set(echo = TRUE)
summary(df$loyalty)
summary(df$loyalty)
summary(df$wifi)
library(knitr)
df <- xmldf
kable(head(summary(df$name)))
kable(head(summary(df$city)))
summary(df$coffeeshop)
summary(df$grocery)
summary(df$loyalty)
summary(df$wifi)
summary(df$loyalty)
kable(head(summary(df$state)))
summary(df$state)
summary(df$state)
state <-summary(df$state)
plot(state)
hist(state)
as.matrix(state)
state<-as.matrix(state)
state[1]
state
state[1]<-NULL
state <- state[2:]
state
state <- state[2:]
state
state <- state[2:,]
state[2]
state <- state[2:,]
state <- state[2:]
state[2:]
state[2::]
state[,2]
state[2]
state[2:3]
state <- state[-1]
state1
state
state <-summary(df$state)
state<-as.matrix(state)
state
state <- state[-1]
state
state[1]
typeof(state)
state<-as.matrix(state)
state
state <-summary(df$state)
state<-as.matrix(state)
typeof(state)
state
hist(state)
state<-as.matrix(state)
state
rownames(state)
state[1]<-NULL
length(state)
state <- state[2:47]
state
rownames(state)
state<-as.matrix(state,nrow =1)
state <-summary(df$state)
state<-as.matrix(state,nrow =1)
state
state<-as.matrix(state,nrow =1,byrow = T)
state <-summary(df$state)
state<-as.matrix(state,nrow =1,byrow = T)
stae
state
state <-summary(df$state)
state
state <- state[2:47]
state
rownames(state)
colnames(state)
names(state)
state_name<-names(state)
ggplot(state, aes(x=state_name,y=state,label = state))
library(ggplot2)
state_plot <- ggplot(state, aes(x=state_name,y=state,label = state))
state_df <- data.frame(state_name,state)
View(state_df)
state_plot <- ggplot(state_df, aes(x=state_name,y=state_counts,label = state_counts))
state_plot + geom_bar(stat = "identity",width = .5)
state_counts <-summary(df$state)
state_counts <- state_counts[2:47] #remove missing values.
state_name<-names(state_counts) #get state name
state_df <- data.frame(state_name,state_counts) #make a dataframe
state_plot <- ggplot(state_df, aes(x=state_name,y=state_counts,label = state_counts))
state_plot + geom_bar(stat = "identity",width = .5)
state_plot + geom_bar(stat = "identity",width = .5) +
labs(title = "State Summary")+
coord_flip()
state_df <- state_df[order(state_df$state_counts),]
state_plot <- ggplot(state_df, aes(x=state_name,y=state_counts,label = state_counts))
state_plot + geom_bar(stat = "identity",width = .5) +
labs(title = "State Summary")+
coord_flip()
state_df
state_df$state_name <- factor(state_df$state_name,levels = state_df$state_name)
state_plot <- ggplot(state_df, aes(x=state_name,y=state_counts,label = state_counts))
state_plot + geom_bar(stat = "identity",width = .5) +
labs(title = "State Summary")+
coord_flip()
summary(df$drivethru)
summary(df$drivethru)$0
summary(df$drivethru)[0]
summary(df$drivethru)[1]
summary(df$drivethru)[2]
summary(df$drivethru)[c(2,4,6)]
summary(df$drivethru)[c(2,3,4)]
sum(summary(df$drivethru)[c(2,3,4)])
sum(summary(df$drivethru)[c(3,6,7)])
state_counts <-summary(df$state)
state_counts <- state_counts[2:47] #remove missing values.
state_name<-names(state_counts) #get state name
state_df <- data.frame(state_name,state_counts) #make a dataframe
state_df <- state_df[order(state_df$state_counts),] #sort
state_df$state_name <- factor(state_df$state_name,levels = state_df$state_name)
ggplot(state_df, aes(x=state_name,y=state_counts,label = state_counts))+
geom_bar(stat = "identity",width = .5) +
labs(title = "State Summary",subtitle = "Number of Coffee Shops in each state")+
coord_flip()
state_counts <-summary(df$state)
state_counts <- state_counts[2:47] #remove missing values.
state_name<-names(state_counts) #get state name
state_df <- data.frame(state_name,state_counts) #make a dataframe
state_df <- state_df[order(state_df$state_counts),] #sort
state_df$state_name <- factor(state_df$state_name,levels = state_df$state_name)
ggplot(state_df, aes(x=state_name,y=state_counts,label = state_counts))+
geom_bar(stat = "identity",width = .5) +
labs(title = "State Summary",subtitle = "Number of Coffee Shops in each state")+
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
library(XML)
library(httr)
doc <- xmlParse(rawToChar(GET(url)$content)) #XML has issue with directly reading url. we can httr package to solve this issue.
xmldf <- xmlToDataFrame(nodes = getNodeSet(doc, "//poi")) #transform into data frame.
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat <- data.frame(lat,lon)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
install.packages("ggmap")
install.packages("ggmap")
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
library(evaluate); library(ggmap)
evaluate("map <- get_map(location = 'minneapolis', zoom = 9)")
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat<-data.frame(lat,lon)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2, api_key = AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2, api_key = AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs)
require(devtools)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
install.packages("devtools")
require(devtools)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
require(devtools)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
library(ggmap)
register_google(key = "AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs")
remove.packages("ggmap")
remove.packages(ggmap)
require(devtools)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
library(ggmap)
install.packages("ggmap")
install.packages("ggmap")
register_google(key = "AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs")
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggmap)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2, api_key = AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
map <- get_stamenmap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2, api_key = AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
map <- get_stamenmap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
map <- get_stamenmap(location = c(lon= -98, lat= 40), zoom= 5, scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
map <- get_stamenmap(location = c(lon= -98, lat= 40), scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
map <- get_stamenmap(location = c(lon= -98, lat= 40)
)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
get_googlemap("waco texas", zoom = 12, maptype = "roadmap") %>% ggmap()
get_googlemap("waco texas", zoom = 12, maptype = "roadmap") %>% ggmap()
get_googlemap("waco texas", zoom = 12, maptype = "roadmap")
devtools::install_github("dkahle/ggmap")
register_google(key = "AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs", account_type = "premium", day_limit = 100000)
library(ggmap)
library(ggplot2)
register_google(key = "AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs", account_type = "premium", day_limit = 100000)
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
lat <- as.numeric(as.character(xmldf$latitude))
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat <- data.frame(lat,lon)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) + guides(fill= FALSE, alpha= FALSE, size= FALSE)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) + guides(fill= FALSE, alpha= FALSE, size= FALSE)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "satellite", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
register_google(key = "AIzaSyD9I0oOXRqaC2khci7pHg7b-olJhLdfn14", account_type = "premium", day_limit = 100000)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
ggmap_credentials()
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
register_google(key = "AbCdEfGhIjKlMnOpQrStUvWxYz")
get_googlemap("waco texas", urlonly = TRUE)
register_google(key = "AIzaSyAwvIZ_5AcoAa49H7Va7KQfRawSOK_hd0k")
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) + guides(fill= FALSE, alpha= FALSE, size= FALSE)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) + guides(fill= FALSE, alpha= FALSE, size= FALSE)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
?register_google
register_google(key = "AIzaSyAwvIZ_5AcoAa49H7Va7KQfRawSOK_hd0k", account_type = "standard")
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
mapgilbert <- get_map(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
register_google(key = "AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs", account_type = "standard")
mapgilbert <- get_googlemap(location = c(lon = -98, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat <- data.frame(lat,lon)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
# Read XML data into a data frame
xml2 <- xmlParse(getURL("https://www4.stat.ncsu.edu/~post/558/datasets/ajax.xml"))
library(tidyverse)
if (!require("xml2")){
install.packages("xml2")
library("xml2")
}
if (!require("DT")){
install.packages("DT")
library("DT")
}
```{r Alternate Read Method}
if (!require("XML")){
install.packages("XML")
library("XML")
}
if (!require("RCurl")){
install.packages("RCurl")
library("RCurl")
}
if (!require("plotly")){
install.packages("plotly")
library("plotly")
}
# Read XML data into a data frame
xml2 <- xmlParse(getURL("https://www4.stat.ncsu.edu/~post/558/datasets/ajax.xml"))
# Convert only the data portion of the XML file to the data frame
caribou <- xmlToDataFrame(xml2["//poi"], stringsAsFactors = FALSE)
# Use the RCurl package to directly read URL
doc <- xmlParse(getURL("https://www4.stat.ncsu.edu/~post/558/datasets/ajax.xml"))
# Transform to data frame then tibble
xmldf <- xmlToDataFrame(nodes = getNodeSet(doc, "//poi"))
xmldf <- as_tibble(xmldf)
xmldf
library(ggplot2)
library(ggmap)
lat <- as.numeric(as.character(xmldf$latitude))
lon <- as.numeric(as.character(xmldf$longitude))
lonlat <- data.frame(lat,lon)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
register_google(key = "AIzaSyDUD42yZ9DTpv7VHSmEcJtizijFMVtwkSs")
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) +           guides(fill= FALSE, alpha= FALSE, size= FALSE)
### I can't use ggmap because it doesn't work on my version of R (3.3.1) and I can't update due to OS, which is why I have to comment it out to knit the html doc ###
register_google(key = "AIzaSyAvRI8BfwHico4cHoTwFHppOzVVswujrHk")
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 5, maptype= "roadmap", scale= 2)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) +           guides(fill= FALSE, alpha= FALSE, size= FALSE)
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 4, maptype= "roadmap", scale= 2)
mapgilbert <- get_googlemap(location = c(lon= -98, lat= 40), zoom= 4, maptype= "roadmap", scale= 2)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) +           guides(fill= FALSE, alpha= FALSE, size= FALSE)
mapgilbert <- get_googlemap(location = c(lon = -105, lat = 40), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_googlemap(location = c(lon = -105, lat = 50), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_googlemap(location = c(lon = -105, lat = 80), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_googlemap(location = c(lon = -200, lat = 80), zoom = 4,
maptype = "roadmap", scale = 2)
ggmap(mapgilbert) +
geom_point(data = lonlat, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = -200, lat = 80), zoom = 4,
maptype = "roadmap", scale = 2)
mapgilbert <- get_map(location = c(lon= -98, lat= 40), zoom= 4, maptype= "roadmap", scale= 2)
ggmap(mapgilbert) +
geom_point(data= lonlat, aes(x= lon, y= lat, fill= "red", alpha= 0.8), size= 2, shape= 21) +           guides(fill= FALSE, alpha= FALSE, size= FALSE)
